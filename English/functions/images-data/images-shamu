#!/bin/bash

function shamu-LRX21O {
  # Download
  show_info 'Download Factory Images...'
  wget https://dl.google.com/dl/android/aosp/shamu-lrx21o-factory-e028f5ea.tgz
  # Extract
  show_info 'Extraction Factory Images...'
  tar zxf shamu*.tgz
  # Install
  show_info 'Install Factory Images...'
  cd shamu-lrx21o
  ./flash-all.sh
  # Timeout
  sleep 5
  # Back
  cd -
  # Cleanup and finish
  rm -rf shamu*
  # Done
  show_success 'Done.'
  whiptail --title "Finished" --msgbox "Installation complete." 8 78
  images
}

function shamu-LRX22C {
  # Download
  show_info 'Download Factory Images...'
  wget https://dl.google.com/dl/android/aosp/shamu-lrx22c-factory-ff173fc6.tgz
  # Extract
  show_info 'Extraction Factory Images...'
  tar zxf shamu*.tgz
  # Install
  show_info 'Install Factory Images...'
  cd shamu-lrx22c
  ./flash-all.sh
  # Timeout
  sleep 5
  # Back
  cd -
  # Cleanup and finish
  rm -rf shamu*
  # Done
  show_success 'Done.'
  whiptail --title "Finished" --msgbox "Installation complete." 8 78
  images
}

function shamu-LMY47I {
  # Download
  show_info 'Download Factory Images...'
  wget https://dl.google.com/dl/android/aosp/shamu-lmy47i-factory-c8afc588.tgz
  # Extract
  show_info 'Extraction Factory Images...'
  tar zxf shamu*.tgz
  # Install
  show_info 'Install Factory Images...'
  cd shamu-lmy47i
  ./flash-all.sh
  # Timeout
  sleep 5
  # Back
  cd -
  # Cleanup and finish
  rm -rf shamu*
  # Done
  show_success 'Done.'
  whiptail --title "Finished" --msgbox "Installation complete." 8 78
  images
}

function shamu-LMY48Y {
  # Download
  show_info 'Download Factory Images...'
  wget https://dl.google.com/dl/android/aosp/shamu-lmy48y-factory-df0504a8.tgz
  # Extract
  show_info 'Extraction Factory Images...'
  tar zxf shamu*.tgz
  # Install
  show_info 'Install Factory Images...'
  cd shamu-lmy48y
  ./flash-all.sh
  # Timeout
  sleep 5
  # Back
  cd -
  # Cleanup and finish
  rm -rf shamu*
  # Done
  show_success 'Done.'
  whiptail --title "Finished" --msgbox "Installation complete." 8 78
  images
}

function shamu-MRA58X {
  # Download
  show_info 'Download Factory Images...'
  wget https://dl.google.com/dl/android/aosp/shamu-mra58x-factory-7ddc0948.tgz
  # Extract
  show_info 'Extraction Factory Images...'
  tar zxf shamu*.tgz
  # Install
  show_info 'Install Factory Images...'
  cd shamu-mra58x
  ./flash-all.sh
  # Timeout
  sleep 5
  # Back
  cd -
  # Cleanup and finish
  rm -rf shamu*
  # Done
  show_success 'Done.'
  whiptail --title "Finished" --msgbox "Installation complete." 8 78
  images
}

function shamu-MOB30O {
MOB30O="shamu-mob30o-factory-e90fd025.tgz"
  if [ -f "$MOB30O" ]; then
    # Extract
    show_info 'Extraction Factory Images...'
    tar zxf shamu*.tgz
    # Install
    show_info 'Install Factory Images...'
    cd shamu-mob30o
    ./flash-all.sh
    # Timeout
    sleep 5
    # Back
    cd -
    # Cleanup and finish
    rm -rf shamu*
    # Done
    show_success 'Done.'
    whiptail --title "Finished" --msgbox "Installation complete." 8 78
    images
  else
    # Download
    show_info 'Download Factory Images...'
    wget https://dl.google.com/dl/android/aosp/shamu-mob30o-factory-e90fd025.tgz
    # Extract
    show_info 'Extraction Factory Images...'
    tar zxf shamu*.tgz
    # Install
    show_info 'Install Factory Images...'
    cd shamu-mob30o
    ./flash-all.sh
    # Timeout
    sleep 5
    # Back
    cd -
    # Cleanup and finish
    rm -rf shamu*
    # Done
    show_success 'Done.'
    whiptail --title "Finished" --msgbox "Installation complete." 8 78
    images
  fi
}

# Nexus 6
function images-shamu {
  eval `resize`
  NEXUS6=$(whiptail \
    --notags \
    --title "Nexus 6" \
    --menu "\nWhat is the firmware version you want to install?" \
    --ok-button "Install" \
    --cancel-button "Go Back" \
  $LINES $COLUMNS $(( $LINES - 12 )) \
    shamu-LRX21O 'Lollipop 5.0.0' \
    shamu-LRX22C 'Lollipop 5.0.1' \
    shamu-LMY47I 'Lollipop 5.1.0' \
    shamu-LMY48Y 'Lollipop 5.1.1' \
    shamu-MRA58X 'Marshmallow 6.0.0' \
    shamu-MOB30O 'Marshmallow 6.0.1' \
  3>&1 1>&2 2>&3)

exitstatus=$?
  if [ $exitstatus = 0 ]; then
    clear && $NEXUS6
  else
    clear && main
  fi
}
