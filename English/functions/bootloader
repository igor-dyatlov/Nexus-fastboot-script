#!/bin/bash

# OEM Lock
function oemlock {
  show_info 'Locking...'
  fastboot oem lock
  # Reboot bootloader
  show_warning 'Devices rebooting'
  fastboot reboot-bootloader
  # Timeout
  sleep 5
  # Done
  show_success 'Done.'
  whiptail --title "Finished" --msgbox "The bootloader is locked." 8 78
  bootloader
}

# Lock
function flashing-lock {
 show_info 'Locking...'
 fastboot flashing lock
 # Reboot bootloader
 show_warning 'Devices rebooting'
 fastboot reboot-bootloader
 # Timeout
 sleep 5
 # Done
 show_success 'Done.'
 whiptail --title "Finished" --msgbox "The bootloader is locked." 8 78
 bootloader
}

# OEM Unlock
function oemunlock {
 show_info 'Unlocking...'
 show_warning 'Confirm the action on your Nexus'
 fastboot oem unlock
 # Reboot bootloader
 show_warning 'Devices rebooting'
 fastboot reboot-bootloader
 # Timeout
 sleep 5
 # Done
 show_success 'Done.'
 whiptail --title "Finished" --msgbox "The bootloader is unlocked." 8 78
 bootloader
}

# Unlock
function flashing-unlock {
 show_info 'Unlocking...'
 show_warning 'Confirm the action on your Nexus'
 fastboot flashing unlock
 # Reboot bootloader
 show_warning 'Devices rebooting'
 fastboot reboot-bootloader
 # Timeout
 sleep 5
 # Done
 show_success 'Done.'
 whiptail --title "Finished" --msgbox "The bootloader is unlocked." 8 78
 bootloader
}
# OEM Lock/Unlock
function bootloader {
    eval `resize`
    BOOT=$(whiptail \
        --notags \
        --title "Unlock and lock the bootloader" \
        --menu "\nWhat would you like to do?" \
        --ok-button "Apply" \
        --cancel-button "Go Back" \
        $LINES $COLUMNS $(( $LINES - 12 )) \
        'oemlock'             'Lock the bootloader or, for older devices' \
        'oemunlock'           'Unlock the bootloader or, for older devices' \
        'flashing-lock'       'Lock the bootloader' \
        'flashing-unlock'     'Unlock the bootloader' \
        3>&1 1>&2 2>&3)

    exitstatus=$?
    if [ $exitstatus = 0 ]; then
        clear && $BOOT
    else
        clear && main
    fi
}
